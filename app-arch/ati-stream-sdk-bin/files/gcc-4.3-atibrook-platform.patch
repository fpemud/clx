--- atibrook/platform/brcc/src/amdhlsl/AMDhlsl/ILCodeGen/HeaderFiles/ilregister.hpp	2008-12-03 01:12:53.000000000 +0100
+++ amdbrook.new/platform/brcc/src/amdhlsl/AMDhlsl/ILCodeGen/HeaderFiles/ilregister.hpp	2009-02-02 17:47:42.000000000 +0100
@@ -89,6 +89,7 @@ jurisdiction and venue of these courts.
 #ifndef AMD_ILREGISTER_HPP
 #define AMD_ILREGISTER_HPP
 
+#include <cstring>
 #include "convert.hpp"
 
 #ifndef IL_BIT
--- atibrook.orig/platform/brcc/src/amdhlsl/AMDhlsl/HighLevelFE/SourceFiles/preprocessorstate.cpp	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/brcc/src/amdhlsl/AMDhlsl/HighLevelFE/SourceFiles/preprocessorstate.cpp	2009-09-07 17:35:36.000000000 +0200
@@ -90,6 +90,7 @@
 #include "parameter.hpp"
 #include "assertlogging.hpp"
 #include "positionaware.hpp"
+#include <cstdio>
 
 PARAMETER(p_select, "select");
 PARAMETER(p_input,  "input");
diff -Naur atibrook.orig/platform/brcc/src/amdhlsl/InterfaceUtils/SourceFiles/calutAMDhlslCompiler.cpp atibrook/platform/brcc/src/amdhlsl/InterfaceUtils/SourceFiles/calutAMDhlslCompiler.cpp
--- atibrook.orig/platform/brcc/src/amdhlsl/InterfaceUtils/SourceFiles/calutAMDhlslCompiler.cpp	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/brcc/src/amdhlsl/InterfaceUtils/SourceFiles/calutAMDhlslCompiler.cpp	2009-09-07 17:46:53.000000000 +0200
@@ -95,6 +95,8 @@
 #include <assert.h>
 #include "amuABIMultiBinary.h"
 #include "hlfrontendapi.hpp"
+#include <cstdlib>
+#include <cstring>
 
 static ErrorState     amdHLSLerrst;
 
diff -Naur atibrook.orig/platform/brcc/src/HighLevelFE/Parser/lexer.cpp atibrook/platform/brcc/src/HighLevelFE/Parser/lexer.cpp
--- atibrook.orig/platform/brcc/src/HighLevelFE/Parser/lexer.cpp	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/brcc/src/HighLevelFE/Parser/lexer.cpp	2009-09-07 17:50:19.000000000 +0200
@@ -9,6 +9,7 @@
 #define YY_FLEX_MINOR_VERSION 5
 
 #include <stdio.h>
+#include <string.h>
 
 
 /* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
diff -Naur atibrook.orig/platform/brcc/src/getopt.c atibrook/platform/brcc/src/getopt.c
--- atibrook.orig/platform/brcc/src/getopt.c	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/brcc/src/getopt.c	2009-09-07 17:55:40.000000000 +0200
@@ -273,7 +273,7 @@
 		}
 	}
 	if ((optchar = (int)*place++) == (int)':' ||
-	    (oli = strchr(options + (IGNORE_FIRST ? 1 : 0), optchar)) == NULL) {
+	    (oli = (char*)strchr(options + (IGNORE_FIRST ? 1 : 0), optchar)) == NULL) {
 		/* option letter unknown or ':' */
 		if (!*place)
 			++optind;
diff -Naur atibrook.orig/platform/include/brook/CPU/brtvector.hpp atibrook/platform/include/brook/CPU/brtvector.hpp
--- atibrook.orig/platform/include/brook/CPU/brtvector.hpp	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/include/brook/CPU/brtvector.hpp	2009-09-07 18:46:50.000000000 +0200
@@ -317,7 +317,7 @@
 template <class T> static typename GetValueOf<T>::type GetAt (const T& in,int i) {
     return in.getAt(i);
 }
-#define SPECIALGETAT(TYP) template <> static TYP GetAt (const TYP& in,int UNUSED(i)) {return in;}
+#define SPECIALGETAT(TYP) template <> TYP GetAt (const TYP& in,int UNUSED(i)) {return in;}
 
 SPECIALGETAT(int)
 SPECIALGETAT(unsigned int)
diff -Naur atibrook.orig/platform/runtime/Common/Impls/StreamImpl.h atibrook/platform/runtime/Common/Impls/StreamImpl.h
--- atibrook.orig/platform/runtime/Common/Impls/StreamImpl.h	2009-03-02 23:47:34.000000000 +0100
+++ atibrook/platform/runtime/Common/Impls/StreamImpl.h	2009-09-07 19:05:37.000000000 +0200
@@ -49,6 +49,7 @@
 #include "Device.h"
 #include "ExportDef.h"
 #include <map>
+#include <string>
 
 class Buffer;
 class BaseDevice;
