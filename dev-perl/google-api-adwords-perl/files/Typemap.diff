diff -ur a/Typemap//lib/SOAP/WSDL/Client.pm b/Typemap//lib/SOAP/WSDL/Client.pm
--- a/Typemap//lib/SOAP/WSDL/Client.pm	2009-03-09 16:10:23.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/Client.pm	2010-07-01 14:16:29.000000000 -0400
@@ -189,12 +189,10 @@
             return $deserializer_of{ $ident }->generate_fault({
                 code => 'soap:Server',
                 role => 'urn:localhost',
-                message => "Error deserializing message: $@. \n"
-                    . "Message was: \n$response"
+                message => $@ # Google::AdWords::Client patch
             });
         }
     };
-
     # if we had no success (Transport layer error status code)
     # or if transport layer failed
     if ( ! $transport_of{ $ident }->is_success() ) {
diff -ur a/Typemap//lib/SOAP/WSDL/Generator/Template/Plugin/XSD.pm b/Typemap//lib/SOAP/WSDL/Generator/Template/Plugin/XSD.pm
--- a/Typemap//lib/SOAP/WSDL/Generator/Template/Plugin/XSD.pm	2009-03-09 16:10:23.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/Generator/Template/Plugin/XSD.pm	2010-07-01 14:16:29.000000000 -0400
@@ -55,13 +55,21 @@
 
 sub create_xsd_name {
     my ($self, $node) = @_;
+
     confess "no node $node" if not defined($node)
         or $node eq "";
-    my $name = $self->_resolve_prefix($node) #. '::'
-        . $node->get_name();
+    my $name = $self->_resolve_prefix($node); #. '::'
+    # Google::AdWords::Client patch
+    #    . $node->get_name();
+    if(ref($node)) {
+      $name .= $node->get_name();
+    } else {
+      my $node_name = $node;
+      $node_name =~ s/^\w+::(.*)/$1/;
+      $name .= $node_name;
+    }
     return $self->perl_name( $name );
 }
-
 sub create_typemap_name {
     my ($self, $node) = @_;
     my $name = $self->_get_prefix('typemap') #. '::'
diff -ur a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface/POD/Operation.tt b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface/POD/Operation.tt
--- a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface/POD/Operation.tt	2008-08-14 09:55:20.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface/POD/Operation.tt	2010-07-01 14:16:29.000000000 -0400
@@ -14,6 +14,6 @@
     response_body_class = XSD.create_xsd_name(response_body_element);
 %]
 
-Returns a L<[% response_body_class %]|[% response_body_class %]> object.
+Returns a L<SOAP::SOM|SOAP::SOM> object. [% # Google::AdWords::Client patch %]
 
- $response = $interface->[% operation.get_name %]([% INCLUDE Interface/POD/Message.tt %] );
+ $response = $interface->[% operation.get_name %]([% INCLUDE Interface/POD/Message.tt %] );
\ No newline at end of file
diff -ur a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface.tt b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface.tt
--- a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface.tt	2008-08-14 09:55:20.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Interface.tt	2010-07-01 14:16:29.000000000 -0400
@@ -93,6 +93,6 @@
 
 [% head1 %] AUTHOR
 
-Generated by SOAP::WSDL on [% PERL %]print scalar localtime() [% END %]
+Generated by SOAP::WSDL. [% # Google::AdWords::Client patch %]
 
-=cut
+=cut
\ No newline at end of file
diff -ur a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Server.tt b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Server.tt
--- a/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Server.tt	2008-12-01 18:57:00.000000000 -0500
+++ b/Typemap//lib/SOAP/WSDL/Generator/Template/XSD/Server.tt	2010-07-01 14:16:29.000000000 -0400
@@ -134,6 +134,6 @@
 
 [% head1 %] AUTHOR
 
-Generated by SOAP::WSDL on [% PERL %]print scalar localtime() [% END %]
+Generated by SOAP::WSDL. [% # Google::AdWords::Client patch %]
 
-=cut
+=cut
\ No newline at end of file
diff -ur a/Typemap//lib/SOAP/WSDL/Types.pm b/Typemap//lib/SOAP/WSDL/Types.pm
--- a/Typemap//lib/SOAP/WSDL/Types.pm	2009-03-09 16:10:23.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/Types.pm	2010-07-01 14:16:29.000000000 -0400
@@ -22,11 +22,11 @@
         my $type = $schema->find_type($ns, $name);
         return $type if $type;
     }
-    return;
+    # Google::AdWords::Client patch
+    return $name;
 }
 
-sub find_attribute {
-    my ($self, $ns, $name) = @_;
+sub find_attribute {    my ($self, $ns, $name) = @_;
     ($ns, $name) = @{ $ns } if ref $ns;     # allow passing list refs
     foreach my $schema (@{ $schema_of{ ident $self } }) {
         my $type = $schema->find_attribute($ns, $name);
diff -ur a/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anySimpleType.pm b/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anySimpleType.pm
--- a/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anySimpleType.pm	2009-03-09 16:17:36.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anySimpleType.pm	2010-07-01 14:16:29.000000000 -0400
@@ -10,11 +10,10 @@
 # don't you never dare to play with this !
 our $___value = \%value_of;
 
-sub get_xmltype { "xs:anySimpleType" }
+sub get_xmltype { return undef; } # Google::AdWords::Client patch
 
 ## use $_[n] for speed - we get called zillions of times...
-# and we don't need to return the last value...
-sub set_value { $value_of{ ${ $_[0] } } = $_[1] }
+# and we don't need to return the last value...sub set_value { $value_of{ ${ $_[0] } } = $_[1] }
 
 # Default attribute handling
 # TODO add something for handling default attributes
diff -ur a/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anyType.pm b/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anyType.pm
--- a/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anyType.pm	2009-03-09 16:17:36.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/XSD/Typelib/Builtin/anyType.pm	2010-07-01 14:16:29.000000000 -0400
@@ -7,7 +7,7 @@
 
 sub get_xmlns { 'http://www.w3.org/2001/XMLSchema' };
 
-sub get_xmltype { "xs:anyType" }
+sub get_xmltype { return undef; } # Google::AdWords::Client patch
 
 # start_tag creates a XML start tag either for a XML element or a attribute.
 # The method is highly optimized for performance:
@@ -49,11 +49,10 @@
         q{},
         "<$_[1]->{ name }",
         # xsi:type
-        (defined $_[1]->{ derived }) ? qq{ xsi:type="} . $_[0]->get_xmltype . q{"} : (),
+        (defined $_[1]->{ derived } and $_[0]->get_xmltype) ? qq{ xsi:type="} . $_[0]->get_xmltype . q{"} : (), # Google::AdWords::Client patch
         # xmlns=
         (defined $_[1]->{ xmlns }) ? qq{ xmlns="$_[1]->{ xmlns }"} : (),
-        , $_[0]->serialize_attr($_[1])
-        , '>';
+        , $_[0]->serialize_attr($_[1])        , '>';
 }
 
 # start_tag creates a XML end tag either for a XML element or a attribute.
diff -ur a/Typemap//lib/SOAP/WSDL/XSD/Typelib/ComplexType.pm b/Typemap//lib/SOAP/WSDL/XSD/Typelib/ComplexType.pm
--- a/Typemap//lib/SOAP/WSDL/XSD/Typelib/ComplexType.pm	2009-03-09 16:17:36.000000000 -0400
+++ b/Typemap//lib/SOAP/WSDL/XSD/Typelib/ComplexType.pm	2010-07-01 14:16:29.000000000 -0400
@@ -339,7 +339,7 @@
 
                 my $target_namespace = $_[0]->get_xmlns();
                 map {
-                    my %type_info = ($element_class eq ref $_)
+                    my %type_info = ($element_class ne ref $_) # Google::AdWords::Client patch
                         ? (derived => 1)
                         : ();
 
@@ -425,10 +425,19 @@
     return join q{}, $_[0]->start_tag($_[1]), ${ $content_ref }, $_[0]->end_tag();
 }
 
+# Google::AdWords::Client patch
+sub get_xmltype {
+  if ( ref($_[0]) =~ /::([^:]+)$/ ) {
+    return $1;
+  }
+  else {
+    return q{};
+  }
+}
+
 1;
 
 __END__
-
 =pod
 
 =head1 NAME
