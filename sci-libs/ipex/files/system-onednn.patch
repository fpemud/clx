diff -Nur a/csrc/cpu/CMakeLists.txt b/csrc/cpu/CMakeLists.txt
--- a/csrc/cpu/CMakeLists.txt	2024-12-19 19:33:09.000000000 -0800
+++ b/csrc/cpu/CMakeLists.txt	2024-12-28 22:17:19.933689110 -0800
@@ -37,7 +37,10 @@
 endif()
 
 set(THIRD_PARTY_BUILD_PATH_NAME "cpu_third_party")
-add_subdirectory(${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/ideep/mkl-dnn ${THIRD_PARTY_BUILD_PATH_NAME}/ideep/mkl-dnn EXCLUDE_FROM_ALL)
+find_package(DNNL REQUIRED)
+if(NOT DNNL_FOUND)
+  add_subdirectory(${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/ideep/mkl-dnn ${THIRD_PARTY_BUILD_PATH_NAME}/ideep/mkl-dnn EXCLUDE_FROM_ALL)
+endif()
 # add_subdirectory(${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/mkl-dnn cpu_third_party/mkl-dnn)
 
 IF(IPEX_DISP_OP)
@@ -75,7 +78,6 @@
 set(IPEX_CPU_CPP_DYNDISP_SRCS)
 set(IPEX_CPU_CPP_ISA_SRCS)
 set(IPEX_CPU_CPP_TOOLKIT_SRCS)
-set(IPEX_CPU_CPP_IDEEP_SRCS)
 set(IPEX_CPU_CPP_RUNTIME_SRCS)
 set(IPEX_CPU_CPP_TPP_SRCS)
 set(IPEX_CPU_CPP_JIT_SRCS)
@@ -90,7 +92,6 @@
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/aten)
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/autocast)
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/dyndisp)
-add_subdirectory(${IPEX_CPU_ROOT_DIR}/ideep)
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/isa)
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/toolkit)
 add_subdirectory(${IPEX_CPU_ROOT_DIR}/runtime)
@@ -107,7 +108,7 @@
 endif(USE_LIBXSMM)
 
 set(IPEX_CPU_CPP_SRCS ${IPEX_CPU_CPP_DYNDISP_SRCS} ${IPEX_CPU_CPP_ISA_SRCS_GEN} ${IPEX_CPU_CPP_UTILS_SRCS} ${IPEX_CPU_CPP_QUANTIZATION_SRCS} ${IPEX_CPU_CPP_JIT_SRCS} ${IPEX_JIT_COMMON_CPP_SRCS}
-    ${IPEX_CPU_CPP_ISA_SRCS} ${IPEX_CPU_CPP_IDEEP_SRCS} ${IPEX_CPU_CPP_AUTOCAST_SRCS} ${IPEX_CPU_CPP_ATEN_SRCS} ${IPEX_CPU_CPP_RUNTIME_SRCS} ${IPEX_CPU_CPP_TOOLKIT_SRCS} ${IPEX_UTLIS_CPP_SRCS} 
+    ${IPEX_CPU_CPP_ISA_SRCS} ${IPEX_CPU_CPP_AUTOCAST_SRCS} ${IPEX_CPU_CPP_ATEN_SRCS} ${IPEX_CPU_CPP_RUNTIME_SRCS} ${IPEX_CPU_CPP_TOOLKIT_SRCS} ${IPEX_UTLIS_CPP_SRCS} 
     ${IPEX_CPU_CPP_TPP_SRCS} ${IPEX_CPU_CPP_COMM_SRCS})
 
 list(REMOVE_ITEM IPEX_CPU_CPP_SRCS ${IPEX_CPU_CPP_ISA_SRCS_ORIGIN})
@@ -120,8 +121,6 @@
 # For IPEX_API macro
 target_compile_definitions(${PLUGIN_NAME_CPU} PUBLIC "BUILD_IPEX_MAIN_LIB")
 
-set_target_properties(${PLUGIN_NAME_CPU} PROPERTIES ONEDNN_INCLUDE_DIR "${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/ideep/mkl-dnn/include")
-
 # includes
 target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_ROOT_DIR})
 target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_ROOT_DIR}/csrc/include)
@@ -133,8 +132,6 @@
 target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_JIT_CPP_ROOT})
 target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_UTLIS_CPP_ROOT})
 
-target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/ideep/mkl-dnn/include)
-
 if(USE_LIBXSMM)
   target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_CPU_ROOT_DIR}/tpp)
   target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/libxsmm/include)
@@ -142,10 +139,7 @@
 
 # path of oneDNN .h.in generated file
 file(RELATIVE_PATH CUR_DIR_REL_PATH "${IPEX_ROOT_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}")
-set(ONEDNN_GENERATED_INCLUDE "${CMAKE_BINARY_DIR}/${CUR_DIR_REL_PATH}/${THIRD_PARTY_BUILD_PATH_NAME}/ideep/mkl-dnn/include")
-target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${ONEDNN_GENERATED_INCLUDE})
 
-target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/ideep/include)
 target_include_directories(${PLUGIN_NAME_CPU} PUBLIC ${PYTHON_INCLUDE_DIR})
 
 if(BUILD_CPU_WITH_ONECCL)
@@ -201,7 +195,7 @@
 add_subdirectory(${IPEX_CPU_CPP_THIRD_PARTY_ROOT}/sleef ${THIRD_PARTY_BUILD_PATH_NAME}/sleef EXCLUDE_FROM_ALL)
 target_link_libraries(${PLUGIN_NAME_CPU} PRIVATE sleef)
 
-add_dependencies(${PLUGIN_NAME_CPU} dnnl)
+add_dependencies(${PLUGIN_NAME_CPU} DNNL::dnnl)
 # If Graph Compiler is built, then it should link to its LLVM dependencies,
 # and not the LLVM symbols exposed by PyTorch.
 if ((DEFINED ENV{DNNL_GRAPH_BUILD_COMPILER_BACKEND}) AND USE_DNNL_GRAPH_COMPILER)
